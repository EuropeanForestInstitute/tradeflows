% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleancomext.R
\name{cleancode}
\alias{cleanallcomextcodes}
\alias{cleancode}
\title{Extract a list of unique, most recent product and country codes from Comext}
\usage{
cleancode(RMySQLcon, tableread, tablewrite, codevariable)

cleanallcomextcodes(RMySQLcon)
}
\arguments{
\item{RMySQLcon}{database connection object created by \code{RMySQL::\link{dbConnect}}}

\item{tableread}{character name of the table to read from}

\item{tablewrite}{character name of the table to write to}

\item{codevariable}{unquoted code variable (Ã  la dplyr verbs)}
}
\value{
TRUE on success
The output is actually a database table containing the cleaned codes.
}
\description{
Takes a raw codes table from comext, select codes which have the most
recent \code{datestart} and make sure they are unique.

\code{cleanallcomextcodes} extracts unique product
and country codes from the Comext raw data so that they are ready for use
as unique keys.
It is a porcelaine function based on the plumbing function \code{cleancode}.
}
\examples{
\dontrun{ # Clean product and country codes
# Connect to the database
con <- RMySQL::dbConnect(RMySQL::MySQL(), dbname = "test")
# Write dummy codes to the database table "raw_code"
raw_code <- data.frame(code = c(4L, 4L), datestart = c(1L, 2L))
RMySQL::dbWriteTable(con, "raw_code", raw_code, row.names = FALSE, overwrite = TRUE)
# Clean the codes and write them to the database table "val_code" (for validated code)
cleancode(con, tableread = "raw_code", tablewrite = "val_code", codevariable = "code")

# Comext codes
if(FALSE){ # If raw codes are not present, transfer them
createdbstructure(sqlfile = "raw_comext.sql", dbname = "test")
tradeharvester::transfertxtcodesfolder2db(con, rawdatacomextfolder = "~/R/tradeharvester/data-raw/comext/201707/text/english/")
}
# Clean comext product, reporter and partner codes
cleanallcomextcodes(con)
# Disconnect from the database
RMySQL::dbDisconnect(con)
}
}

